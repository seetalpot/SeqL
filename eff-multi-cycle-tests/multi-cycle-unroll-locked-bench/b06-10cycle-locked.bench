
##################################Primary Inputs for Unroll-1
INPUT(EQL_1)
INPUT(CONT_EQL_1)


##################################Primary Inputs for Unroll-2
INPUT(EQL_2)
INPUT(CONT_EQL_2)


##################################Primary Inputs for Unroll-3
INPUT(EQL_3)
INPUT(CONT_EQL_3)


##################################Primary Inputs for Unroll-4
INPUT(EQL_4)
INPUT(CONT_EQL_4)


##################################Primary Inputs for Unroll-5
INPUT(EQL_5)
INPUT(CONT_EQL_5)


##################################Primary Inputs for Unroll-6
INPUT(EQL_6)
INPUT(CONT_EQL_6)


##################################Primary Inputs for Unroll-7
INPUT(EQL_7)
INPUT(CONT_EQL_7)


##################################Primary Inputs for Unroll-8
INPUT(EQL_8)
INPUT(CONT_EQL_8)


##################################Primary Inputs for Unroll-9
INPUT(EQL_9)
INPUT(CONT_EQL_9)


##################################Primary Inputs for Unroll-10
INPUT(EQL_10)
INPUT(CONT_EQL_10)


##################################Primary Outputs for Unroll-1
OUTPUT(CC_MUX_REG_2__1)
OUTPUT(CC_MUX_REG_1__1)
OUTPUT(USCITE_REG_2__1)
OUTPUT(USCITE_REG_1__1)
OUTPUT(ENABLE_COUNT_REG_1)
OUTPUT(ACKOUT_REG_1)


##################################Primary Outputs for Unroll-2
OUTPUT(CC_MUX_REG_2__2)
OUTPUT(CC_MUX_REG_1__2)
OUTPUT(USCITE_REG_2__2)
OUTPUT(USCITE_REG_1__2)
OUTPUT(ENABLE_COUNT_REG_2)
OUTPUT(ACKOUT_REG_2)


##################################Primary Outputs for Unroll-3
OUTPUT(CC_MUX_REG_2__3)
OUTPUT(CC_MUX_REG_1__3)
OUTPUT(USCITE_REG_2__3)
OUTPUT(USCITE_REG_1__3)
OUTPUT(ENABLE_COUNT_REG_3)
OUTPUT(ACKOUT_REG_3)


##################################Primary Outputs for Unroll-4
OUTPUT(CC_MUX_REG_2__4)
OUTPUT(CC_MUX_REG_1__4)
OUTPUT(USCITE_REG_2__4)
OUTPUT(USCITE_REG_1__4)
OUTPUT(ENABLE_COUNT_REG_4)
OUTPUT(ACKOUT_REG_4)


##################################Primary Outputs for Unroll-5
OUTPUT(CC_MUX_REG_2__5)
OUTPUT(CC_MUX_REG_1__5)
OUTPUT(USCITE_REG_2__5)
OUTPUT(USCITE_REG_1__5)
OUTPUT(ENABLE_COUNT_REG_5)
OUTPUT(ACKOUT_REG_5)


##################################Primary Outputs for Unroll-6
OUTPUT(CC_MUX_REG_2__6)
OUTPUT(CC_MUX_REG_1__6)
OUTPUT(USCITE_REG_2__6)
OUTPUT(USCITE_REG_1__6)
OUTPUT(ENABLE_COUNT_REG_6)
OUTPUT(ACKOUT_REG_6)


##################################Primary Outputs for Unroll-7
OUTPUT(CC_MUX_REG_2__7)
OUTPUT(CC_MUX_REG_1__7)
OUTPUT(USCITE_REG_2__7)
OUTPUT(USCITE_REG_1__7)
OUTPUT(ENABLE_COUNT_REG_7)
OUTPUT(ACKOUT_REG_7)


##################################Primary Outputs for Unroll-8
OUTPUT(CC_MUX_REG_2__8)
OUTPUT(CC_MUX_REG_1__8)
OUTPUT(USCITE_REG_2__8)
OUTPUT(USCITE_REG_1__8)
OUTPUT(ENABLE_COUNT_REG_8)
OUTPUT(ACKOUT_REG_8)


##################################Primary Outputs for Unroll-9
OUTPUT(CC_MUX_REG_2__9)
OUTPUT(CC_MUX_REG_1__9)
OUTPUT(USCITE_REG_2__9)
OUTPUT(USCITE_REG_1__9)
OUTPUT(ENABLE_COUNT_REG_9)
OUTPUT(ACKOUT_REG_9)


##################################Primary Outputs for Unroll-10
OUTPUT(CC_MUX_REG_2__10)
OUTPUT(CC_MUX_REG_1__10)
OUTPUT(USCITE_REG_2__10)
OUTPUT(USCITE_REG_1__10)
OUTPUT(ENABLE_COUNT_REG_10)
OUTPUT(ACKOUT_REG_10)

##################################Other Inputs
INPUT(ACKOUT_REG_1)
INPUT(STATE_REG_2__1)
INPUT(STATE_REG_1__1)
INPUT(STATE_REG_0__1)
INPUT(CC_MUX_REG_2__1)
INPUT(CC_MUX_REG_1__1)
INPUT(USCITE_REG_2__1)
INPUT(USCITE_REG_1__1)
INPUT(ENABLE_COUNT_REG_1)

##################################Other Outputs
OUTPUT(U62_10$enc)
OUTPUT(U57_10$enc)
OUTPUT(U56_10$enc)
OUTPUT(U55_10$enc)
OUTPUT(U59_10$enc)
OUTPUT(U58_10$enc)
OUTPUT(U61_10$enc)
OUTPUT(U60_10$enc)
OUTPUT(U62_10$enc)

#################################Key Inputs
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)

####################################################################Unroll 1
####################################################################Unroll 2
####################################################################Unroll 3
####################################################################Unroll 4
####################################################################Unroll 5
####################################################################Unroll 6
####################################################################Unroll 7
####################################################################Unroll 8
####################################################################Unroll 9
####################################################################Unroll 10

ACKOUT_REG_2 = BUF(U62_1)
STATE_REG_2__2 = BUF(U57_1)
STATE_REG_1__2 = BUF(U56_1)
STATE_REG_0__2 = BUF(U55_1)
CC_MUX_REG_2__2 = BUF(U59_1)
CC_MUX_REG_1__2 = BUF(U58_1)
USCITE_REG_2__2 = BUF(U61_1)
USCITE_REG_1__2 = BUF(U60_1)
ENABLE_COUNT_REG_2 = BUF(U62_1)





U54_1= AND(U90_1, U89_1)
U55_1= NAND(U54_1, U78_1)
U56_1= NAND(U82_1, U81_1, U72_1, U66_1)
U57_1= NAND(U80_1, U79_1)
U58_1= NAND(U88_1, U69_1, U92_1, U91_1)
U59_1= NAND(U86_1, U70_1, U85_1)
U60_1= NAND(EQL_1, U76_1, U54_1)
U61_1= NAND(U72_1, U75_1)
U62_1= NAND(U84_1, U83_1)
U63_1= AND(STATE_REG_2__1, STATE_REG_1__1, STATE_REG_0__1enc)
U64_1= NOT(STATE_REG_1__1)
U65_1= NOT(EQL_1)
U66_1= NAND(EQL_1, STATE_REG_1__1enc)
U67_1= NOT(STATE_REG_2__1)
U68_1= NOT(STATE_REG_0__1)
U69_1= OR(STATE_REG_2__1, STATE_REG_0__1enc)
U70_1= NAND(U64_1, U67_1, STATE_REG_0__1enc)
U71_1= NOT(U66_1)
U72_1= NAND(STATE_REG_2__1, U68_1, U64_1, U65_1)
U73_1= NOT(U69_1)
U74_1= NOT(U70_1)
U75_1= NAND(STATE_REG_2__1, U71_1)
U76_1= NAND(STATE_REG_2__1, STATE_REG_1__1enc)
U77_1= OR(STATE_REG_1__1, STATE_REG_0__1enc)
U78_1= NAND(U65_1, U77_1)
U79_1= NAND(U74_1, U65_1)
U80_1= NAND(STATE_REG_2__1, U78_1)
U81_1= NAND(EQL_1, U67_1, STATE_REG_0__1enc)
U82_1= NAND(U73_1, STATE_REG_1__1enc)
U83_1= NAND(STATE_REG_1__1, U65_1, U73_1)
U84_1= OR(CONT_EQL_1, U63_1)
U85_1= NAND(U71_1, U68_1)
U86_1= NAND(STATE_REG_2__1, U78_1)
U87_1= NAND(EQL_1, U68_1)
U88_1= NAND(STATE_REG_0__1, STATE_REG_2__1enc)
U89_1= NAND(U73_1, U64_1)
U90_1= NAND(STATE_REG_0__1, STATE_REG_1__1enc)
U91_1= NAND(EQL_1, U64_1)
U92_1= NAND(STATE_REG_1__1, U87_1)

ACKOUT_REG_3 = BUF(U62_2)
STATE_REG_2__3 = BUF(U57_2)
STATE_REG_1__3 = BUF(U56_2)
STATE_REG_0__3 = BUF(U55_2)
CC_MUX_REG_2__3 = BUF(U59_2)
CC_MUX_REG_1__3 = BUF(U58_2)
USCITE_REG_2__3 = BUF(U61_2)
USCITE_REG_1__3 = BUF(U60_2)
ENABLE_COUNT_REG_3 = BUF(U62_2)





U54_2= AND(U90_2, U89_2)
U55_2= NAND(U54_2, U78_2)
U56_2= NAND(U82_2, U81_2, U72_2, U66_2)
U57_2= NAND(U80_2, U79_2)
U58_2= NAND(U88_2, U69_2, U92_2, U91_2)
U59_2= NAND(U86_2, U70_2, U85_2)
U60_2= NAND(EQL_2, U76_2, U54_2)
U61_2= NAND(U72_2, U75_2)
U62_2= NAND(U84_2, U83_2)
U63_2= AND(STATE_REG_2__2, STATE_REG_1__2, STATE_REG_0__2)
U64_2= NOT(STATE_REG_1__2)
U65_2= NOT(EQL_2)
U66_2= NAND(EQL_2, STATE_REG_1__2)
U67_2= NOT(STATE_REG_2__2)
U68_2= NOT(STATE_REG_0__2)
U69_2= OR(STATE_REG_2__2, STATE_REG_0__2)
U70_2= NAND(U64_2, U67_2, STATE_REG_0__2)
U71_2= NOT(U66_2)
U72_2= NAND(STATE_REG_2__2, U68_2, U64_2, U65_2)
U73_2= NOT(U69_2)
U74_2= NOT(U70_2)
U75_2= NAND(STATE_REG_2__2, U71_2)
U76_2= NAND(STATE_REG_2__2, STATE_REG_1__2)
U77_2= OR(STATE_REG_1__2, STATE_REG_0__2)
U78_2= NAND(U65_2, U77_2)
U79_2= NAND(U74_2, U65_2)
U80_2= NAND(STATE_REG_2__2, U78_2)
U81_2= NAND(EQL_2, U67_2, STATE_REG_0__2)
U82_2= NAND(U73_2, STATE_REG_1__2)
U83_2= NAND(STATE_REG_1__2, U65_2, U73_2)
U84_2= OR(CONT_EQL_2, U63_2)
U85_2= NAND(U71_2, U68_2)
U86_2= NAND(STATE_REG_2__2, U78_2)
U87_2= NAND(EQL_2, U68_2)
U88_2= NAND(STATE_REG_0__2, STATE_REG_2__2)
U89_2= NAND(U73_2, U64_2)
U90_2= NAND(STATE_REG_0__2, STATE_REG_1__2)
U91_2= NAND(EQL_2, U64_2)
U92_2= NAND(STATE_REG_1__2, U87_2)

ACKOUT_REG_4 = BUF(U62_3)
STATE_REG_2__4 = BUF(U57_3)
STATE_REG_1__4 = BUF(U56_3)
STATE_REG_0__4 = BUF(U55_3)
CC_MUX_REG_2__4 = BUF(U59_3)
CC_MUX_REG_1__4 = BUF(U58_3)
USCITE_REG_2__4 = BUF(U61_3)
USCITE_REG_1__4 = BUF(U60_3)
ENABLE_COUNT_REG_4 = BUF(U62_3)





U54_3= AND(U90_3, U89_3)
U55_3= NAND(U54_3, U78_3)
U56_3= NAND(U82_3, U81_3, U72_3, U66_3)
U57_3= NAND(U80_3, U79_3)
U58_3= NAND(U88_3, U69_3, U92_3, U91_3)
U59_3= NAND(U86_3, U70_3, U85_3)
U60_3= NAND(EQL_3, U76_3, U54_3)
U61_3= NAND(U72_3, U75_3)
U62_3= NAND(U84_3, U83_3)
U63_3= AND(STATE_REG_2__3, STATE_REG_1__3, STATE_REG_0__3)
U64_3= NOT(STATE_REG_1__3)
U65_3= NOT(EQL_3)
U66_3= NAND(EQL_3, STATE_REG_1__3)
U67_3= NOT(STATE_REG_2__3)
U68_3= NOT(STATE_REG_0__3)
U69_3= OR(STATE_REG_2__3, STATE_REG_0__3)
U70_3= NAND(U64_3, U67_3, STATE_REG_0__3)
U71_3= NOT(U66_3)
U72_3= NAND(STATE_REG_2__3, U68_3, U64_3, U65_3)
U73_3= NOT(U69_3)
U74_3= NOT(U70_3)
U75_3= NAND(STATE_REG_2__3, U71_3)
U76_3= NAND(STATE_REG_2__3, STATE_REG_1__3)
U77_3= OR(STATE_REG_1__3, STATE_REG_0__3)
U78_3= NAND(U65_3, U77_3)
U79_3= NAND(U74_3, U65_3)
U80_3= NAND(STATE_REG_2__3, U78_3)
U81_3= NAND(EQL_3, U67_3, STATE_REG_0__3)
U82_3= NAND(U73_3, STATE_REG_1__3)
U83_3= NAND(STATE_REG_1__3, U65_3, U73_3)
U84_3= OR(CONT_EQL_3, U63_3)
U85_3= NAND(U71_3, U68_3)
U86_3= NAND(STATE_REG_2__3, U78_3)
U87_3= NAND(EQL_3, U68_3)
U88_3= NAND(STATE_REG_0__3, STATE_REG_2__3)
U89_3= NAND(U73_3, U64_3)
U90_3= NAND(STATE_REG_0__3, STATE_REG_1__3)
U91_3= NAND(EQL_3, U64_3)
U92_3= NAND(STATE_REG_1__3, U87_3)

ACKOUT_REG_5 = BUF(U62_4)
STATE_REG_2__5 = BUF(U57_4)
STATE_REG_1__5 = BUF(U56_4)
STATE_REG_0__5 = BUF(U55_4)
CC_MUX_REG_2__5 = BUF(U59_4)
CC_MUX_REG_1__5 = BUF(U58_4)
USCITE_REG_2__5 = BUF(U61_4)
USCITE_REG_1__5 = BUF(U60_4)
ENABLE_COUNT_REG_5 = BUF(U62_4)





U54_4= AND(U90_4, U89_4)
U55_4= NAND(U54_4, U78_4)
U56_4= NAND(U82_4, U81_4, U72_4, U66_4)
U57_4= NAND(U80_4, U79_4)
U58_4= NAND(U88_4, U69_4, U92_4, U91_4)
U59_4= NAND(U86_4, U70_4, U85_4)
U60_4= NAND(EQL_4, U76_4, U54_4)
U61_4= NAND(U72_4, U75_4)
U62_4= NAND(U84_4, U83_4)
U63_4= AND(STATE_REG_2__4, STATE_REG_1__4, STATE_REG_0__4)
U64_4= NOT(STATE_REG_1__4)
U65_4= NOT(EQL_4)
U66_4= NAND(EQL_4, STATE_REG_1__4)
U67_4= NOT(STATE_REG_2__4)
U68_4= NOT(STATE_REG_0__4)
U69_4= OR(STATE_REG_2__4, STATE_REG_0__4)
U70_4= NAND(U64_4, U67_4, STATE_REG_0__4)
U71_4= NOT(U66_4)
U72_4= NAND(STATE_REG_2__4, U68_4, U64_4, U65_4)
U73_4= NOT(U69_4)
U74_4= NOT(U70_4)
U75_4= NAND(STATE_REG_2__4, U71_4)
U76_4= NAND(STATE_REG_2__4, STATE_REG_1__4)
U77_4= OR(STATE_REG_1__4, STATE_REG_0__4)
U78_4= NAND(U65_4, U77_4)
U79_4= NAND(U74_4, U65_4)
U80_4= NAND(STATE_REG_2__4, U78_4)
U81_4= NAND(EQL_4, U67_4, STATE_REG_0__4)
U82_4= NAND(U73_4, STATE_REG_1__4)
U83_4= NAND(STATE_REG_1__4, U65_4, U73_4)
U84_4= OR(CONT_EQL_4, U63_4)
U85_4= NAND(U71_4, U68_4)
U86_4= NAND(STATE_REG_2__4, U78_4)
U87_4= NAND(EQL_4, U68_4)
U88_4= NAND(STATE_REG_0__4, STATE_REG_2__4)
U89_4= NAND(U73_4, U64_4)
U90_4= NAND(STATE_REG_0__4, STATE_REG_1__4)
U91_4= NAND(EQL_4, U64_4)
U92_4= NAND(STATE_REG_1__4, U87_4)

ACKOUT_REG_6 = BUF(U62_5)
STATE_REG_2__6 = BUF(U57_5)
STATE_REG_1__6 = BUF(U56_5)
STATE_REG_0__6 = BUF(U55_5)
CC_MUX_REG_2__6 = BUF(U59_5)
CC_MUX_REG_1__6 = BUF(U58_5)
USCITE_REG_2__6 = BUF(U61_5)
USCITE_REG_1__6 = BUF(U60_5)
ENABLE_COUNT_REG_6 = BUF(U62_5)





U54_5= AND(U90_5, U89_5)
U55_5= NAND(U54_5, U78_5)
U56_5= NAND(U82_5, U81_5, U72_5, U66_5)
U57_5= NAND(U80_5, U79_5)
U58_5= NAND(U88_5, U69_5, U92_5, U91_5)
U59_5= NAND(U86_5, U70_5, U85_5)
U60_5= NAND(EQL_5, U76_5, U54_5)
U61_5= NAND(U72_5, U75_5)
U62_5= NAND(U84_5, U83_5)
U63_5= AND(STATE_REG_2__5, STATE_REG_1__5, STATE_REG_0__5)
U64_5= NOT(STATE_REG_1__5)
U65_5= NOT(EQL_5)
U66_5= NAND(EQL_5, STATE_REG_1__5)
U67_5= NOT(STATE_REG_2__5)
U68_5= NOT(STATE_REG_0__5)
U69_5= OR(STATE_REG_2__5, STATE_REG_0__5)
U70_5= NAND(U64_5, U67_5, STATE_REG_0__5)
U71_5= NOT(U66_5)
U72_5= NAND(STATE_REG_2__5, U68_5, U64_5, U65_5)
U73_5= NOT(U69_5)
U74_5= NOT(U70_5)
U75_5= NAND(STATE_REG_2__5, U71_5)
U76_5= NAND(STATE_REG_2__5, STATE_REG_1__5)
U77_5= OR(STATE_REG_1__5, STATE_REG_0__5)
U78_5= NAND(U65_5, U77_5)
U79_5= NAND(U74_5, U65_5)
U80_5= NAND(STATE_REG_2__5, U78_5)
U81_5= NAND(EQL_5, U67_5, STATE_REG_0__5)
U82_5= NAND(U73_5, STATE_REG_1__5)
U83_5= NAND(STATE_REG_1__5, U65_5, U73_5)
U84_5= OR(CONT_EQL_5, U63_5)
U85_5= NAND(U71_5, U68_5)
U86_5= NAND(STATE_REG_2__5, U78_5)
U87_5= NAND(EQL_5, U68_5)
U88_5= NAND(STATE_REG_0__5, STATE_REG_2__5)
U89_5= NAND(U73_5, U64_5)
U90_5= NAND(STATE_REG_0__5, STATE_REG_1__5)
U91_5= NAND(EQL_5, U64_5)
U92_5= NAND(STATE_REG_1__5, U87_5)

ACKOUT_REG_7 = BUF(U62_6)
STATE_REG_2__7 = BUF(U57_6)
STATE_REG_1__7 = BUF(U56_6)
STATE_REG_0__7 = BUF(U55_6)
CC_MUX_REG_2__7 = BUF(U59_6)
CC_MUX_REG_1__7 = BUF(U58_6)
USCITE_REG_2__7 = BUF(U61_6)
USCITE_REG_1__7 = BUF(U60_6)
ENABLE_COUNT_REG_7 = BUF(U62_6)





U54_6= AND(U90_6, U89_6)
U55_6= NAND(U54_6, U78_6)
U56_6= NAND(U82_6, U81_6, U72_6, U66_6)
U57_6= NAND(U80_6, U79_6)
U58_6= NAND(U88_6, U69_6, U92_6, U91_6)
U59_6= NAND(U86_6, U70_6, U85_6)
U60_6= NAND(EQL_6, U76_6, U54_6)
U61_6= NAND(U72_6, U75_6)
U62_6= NAND(U84_6, U83_6)
U63_6= AND(STATE_REG_2__6, STATE_REG_1__6, STATE_REG_0__6)
U64_6= NOT(STATE_REG_1__6)
U65_6= NOT(EQL_6)
U66_6= NAND(EQL_6, STATE_REG_1__6)
U67_6= NOT(STATE_REG_2__6)
U68_6= NOT(STATE_REG_0__6)
U69_6= OR(STATE_REG_2__6, STATE_REG_0__6)
U70_6= NAND(U64_6, U67_6, STATE_REG_0__6)
U71_6= NOT(U66_6)
U72_6= NAND(STATE_REG_2__6, U68_6, U64_6, U65_6)
U73_6= NOT(U69_6)
U74_6= NOT(U70_6)
U75_6= NAND(STATE_REG_2__6, U71_6)
U76_6= NAND(STATE_REG_2__6, STATE_REG_1__6)
U77_6= OR(STATE_REG_1__6, STATE_REG_0__6)
U78_6= NAND(U65_6, U77_6)
U79_6= NAND(U74_6, U65_6)
U80_6= NAND(STATE_REG_2__6, U78_6)
U81_6= NAND(EQL_6, U67_6, STATE_REG_0__6)
U82_6= NAND(U73_6, STATE_REG_1__6)
U83_6= NAND(STATE_REG_1__6, U65_6, U73_6)
U84_6= OR(CONT_EQL_6, U63_6)
U85_6= NAND(U71_6, U68_6)
U86_6= NAND(STATE_REG_2__6, U78_6)
U87_6= NAND(EQL_6, U68_6)
U88_6= NAND(STATE_REG_0__6, STATE_REG_2__6)
U89_6= NAND(U73_6, U64_6)
U90_6= NAND(STATE_REG_0__6, STATE_REG_1__6)
U91_6= NAND(EQL_6, U64_6)
U92_6= NAND(STATE_REG_1__6, U87_6)

ACKOUT_REG_8 = BUF(U62_7)
STATE_REG_2__8 = BUF(U57_7)
STATE_REG_1__8 = BUF(U56_7)
STATE_REG_0__8 = BUF(U55_7)
CC_MUX_REG_2__8 = BUF(U59_7)
CC_MUX_REG_1__8 = BUF(U58_7)
USCITE_REG_2__8 = BUF(U61_7)
USCITE_REG_1__8 = BUF(U60_7)
ENABLE_COUNT_REG_8 = BUF(U62_7)





U54_7= AND(U90_7, U89_7)
U55_7= NAND(U54_7, U78_7)
U56_7= NAND(U82_7, U81_7, U72_7, U66_7)
U57_7= NAND(U80_7, U79_7)
U58_7= NAND(U88_7, U69_7, U92_7, U91_7)
U59_7= NAND(U86_7, U70_7, U85_7)
U60_7= NAND(EQL_7, U76_7, U54_7)
U61_7= NAND(U72_7, U75_7)
U62_7= NAND(U84_7, U83_7)
U63_7= AND(STATE_REG_2__7, STATE_REG_1__7, STATE_REG_0__7)
U64_7= NOT(STATE_REG_1__7)
U65_7= NOT(EQL_7)
U66_7= NAND(EQL_7, STATE_REG_1__7)
U67_7= NOT(STATE_REG_2__7)
U68_7= NOT(STATE_REG_0__7)
U69_7= OR(STATE_REG_2__7, STATE_REG_0__7)
U70_7= NAND(U64_7, U67_7, STATE_REG_0__7)
U71_7= NOT(U66_7)
U72_7= NAND(STATE_REG_2__7, U68_7, U64_7, U65_7)
U73_7= NOT(U69_7)
U74_7= NOT(U70_7)
U75_7= NAND(STATE_REG_2__7, U71_7)
U76_7= NAND(STATE_REG_2__7, STATE_REG_1__7)
U77_7= OR(STATE_REG_1__7, STATE_REG_0__7)
U78_7= NAND(U65_7, U77_7)
U79_7= NAND(U74_7, U65_7)
U80_7= NAND(STATE_REG_2__7, U78_7)
U81_7= NAND(EQL_7, U67_7, STATE_REG_0__7)
U82_7= NAND(U73_7, STATE_REG_1__7)
U83_7= NAND(STATE_REG_1__7, U65_7, U73_7)
U84_7= OR(CONT_EQL_7, U63_7)
U85_7= NAND(U71_7, U68_7)
U86_7= NAND(STATE_REG_2__7, U78_7)
U87_7= NAND(EQL_7, U68_7)
U88_7= NAND(STATE_REG_0__7, STATE_REG_2__7)
U89_7= NAND(U73_7, U64_7)
U90_7= NAND(STATE_REG_0__7, STATE_REG_1__7)
U91_7= NAND(EQL_7, U64_7)
U92_7= NAND(STATE_REG_1__7, U87_7)

ACKOUT_REG_9 = BUF(U62_8)
STATE_REG_2__9 = BUF(U57_8)
STATE_REG_1__9 = BUF(U56_8)
STATE_REG_0__9 = BUF(U55_8)
CC_MUX_REG_2__9 = BUF(U59_8)
CC_MUX_REG_1__9 = BUF(U58_8)
USCITE_REG_2__9 = BUF(U61_8)
USCITE_REG_1__9 = BUF(U60_8)
ENABLE_COUNT_REG_9 = BUF(U62_8)





U54_8= AND(U90_8, U89_8)
U55_8= NAND(U54_8, U78_8)
U56_8= NAND(U82_8, U81_8, U72_8, U66_8)
U57_8= NAND(U80_8, U79_8)
U58_8= NAND(U88_8, U69_8, U92_8, U91_8)
U59_8= NAND(U86_8, U70_8, U85_8)
U60_8= NAND(EQL_8, U76_8, U54_8)
U61_8= NAND(U72_8, U75_8)
U62_8= NAND(U84_8, U83_8)
U63_8= AND(STATE_REG_2__8, STATE_REG_1__8, STATE_REG_0__8)
U64_8= NOT(STATE_REG_1__8)
U65_8= NOT(EQL_8)
U66_8= NAND(EQL_8, STATE_REG_1__8)
U67_8= NOT(STATE_REG_2__8)
U68_8= NOT(STATE_REG_0__8)
U69_8= OR(STATE_REG_2__8, STATE_REG_0__8)
U70_8= NAND(U64_8, U67_8, STATE_REG_0__8)
U71_8= NOT(U66_8)
U72_8= NAND(STATE_REG_2__8, U68_8, U64_8, U65_8)
U73_8= NOT(U69_8)
U74_8= NOT(U70_8)
U75_8= NAND(STATE_REG_2__8, U71_8)
U76_8= NAND(STATE_REG_2__8, STATE_REG_1__8)
U77_8= OR(STATE_REG_1__8, STATE_REG_0__8)
U78_8= NAND(U65_8, U77_8)
U79_8= NAND(U74_8, U65_8)
U80_8= NAND(STATE_REG_2__8, U78_8)
U81_8= NAND(EQL_8, U67_8, STATE_REG_0__8)
U82_8= NAND(U73_8, STATE_REG_1__8)
U83_8= NAND(STATE_REG_1__8, U65_8, U73_8)
U84_8= OR(CONT_EQL_8, U63_8)
U85_8= NAND(U71_8, U68_8)
U86_8= NAND(STATE_REG_2__8, U78_8)
U87_8= NAND(EQL_8, U68_8)
U88_8= NAND(STATE_REG_0__8, STATE_REG_2__8)
U89_8= NAND(U73_8, U64_8)
U90_8= NAND(STATE_REG_0__8, STATE_REG_1__8)
U91_8= NAND(EQL_8, U64_8)
U92_8= NAND(STATE_REG_1__8, U87_8)

ACKOUT_REG_10 = BUF(U62_9)
STATE_REG_2__10 = BUF(U57_9)
STATE_REG_1__10 = BUF(U56_9)
STATE_REG_0__10 = BUF(U55_9)
CC_MUX_REG_2__10 = BUF(U59_9)
CC_MUX_REG_1__10 = BUF(U58_9)
USCITE_REG_2__10 = BUF(U61_9)
USCITE_REG_1__10 = BUF(U60_9)
ENABLE_COUNT_REG_10 = BUF(U62_9)





U54_9= AND(U90_9, U89_9)
U55_9= NAND(U54_9, U78_9)
U56_9= NAND(U82_9, U81_9, U72_9, U66_9)
U57_9= NAND(U80_9, U79_9)
U58_9= NAND(U88_9, U69_9, U92_9, U91_9)
U59_9= NAND(U86_9, U70_9, U85_9)
U60_9= NAND(EQL_9, U76_9, U54_9)
U61_9= NAND(U72_9, U75_9)
U62_9= NAND(U84_9, U83_9)
U63_9= AND(STATE_REG_2__9, STATE_REG_1__9, STATE_REG_0__9)
U64_9= NOT(STATE_REG_1__9)
U65_9= NOT(EQL_9)
U66_9= NAND(EQL_9, STATE_REG_1__9)
U67_9= NOT(STATE_REG_2__9)
U68_9= NOT(STATE_REG_0__9)
U69_9= OR(STATE_REG_2__9, STATE_REG_0__9)
U70_9= NAND(U64_9, U67_9, STATE_REG_0__9)
U71_9= NOT(U66_9)
U72_9= NAND(STATE_REG_2__9, U68_9, U64_9, U65_9)
U73_9= NOT(U69_9)
U74_9= NOT(U70_9)
U75_9= NAND(STATE_REG_2__9, U71_9)
U76_9= NAND(STATE_REG_2__9, STATE_REG_1__9)
U77_9= OR(STATE_REG_1__9, STATE_REG_0__9)
U78_9= NAND(U65_9, U77_9)
U79_9= NAND(U74_9, U65_9)
U80_9= NAND(STATE_REG_2__9, U78_9)
U81_9= NAND(EQL_9, U67_9, STATE_REG_0__9)
U82_9= NAND(U73_9, STATE_REG_1__9)
U83_9= NAND(STATE_REG_1__9, U65_9, U73_9)
U84_9= OR(CONT_EQL_9, U63_9)
U85_9= NAND(U71_9, U68_9)
U86_9= NAND(STATE_REG_2__9, U78_9)
U87_9= NAND(EQL_9, U68_9)
U88_9= NAND(STATE_REG_0__9, STATE_REG_2__9)
U89_9= NAND(U73_9, U64_9)
U90_9= NAND(STATE_REG_0__9, STATE_REG_1__9)
U91_9= NAND(EQL_9, U64_9)
U92_9= NAND(STATE_REG_1__9, U87_9)

ACKOUT_REG_11 = BUF(U62_10)
STATE_REG_2__11 = BUF(U57_10)
STATE_REG_1__11 = BUF(U56_10)
STATE_REG_0__11 = BUF(U55_10)
CC_MUX_REG_2__11 = BUF(U59_10)
CC_MUX_REG_1__11 = BUF(U58_10)
USCITE_REG_2__11 = BUF(U61_10)
USCITE_REG_1__11 = BUF(U60_10)
ENABLE_COUNT_REG_11 = BUF(U62_10)





U54_10= AND(U90_10, U89_10)
U55_10= NAND(U54_10, U78_10)
U56_10= NAND(U82_10, U81_10, U72_10, U66_10)
U57_10= NAND(U80_10, U79_10)
U58_10= NAND(U88_10, U69_10, U92_10, U91_10)
U59_10= NAND(U86_10, U70_10, U85_10)
U60_10= NAND(EQL_10, U76_10, U54_10)
U61_10= NAND(U72_10, U75_10)
U62_10= NAND(U84_10, U83_10)
U63_10= AND(STATE_REG_2__10, STATE_REG_1__10, STATE_REG_0__10)
U64_10= NOT(STATE_REG_1__10)
U65_10= NOT(EQL_10)
U66_10= NAND(EQL_10, STATE_REG_1__10)
U67_10= NOT(STATE_REG_2__10)
U68_10= NOT(STATE_REG_0__10)
U69_10= OR(STATE_REG_2__10, STATE_REG_0__10)
U70_10= NAND(U64_10, U67_10, STATE_REG_0__10)
U71_10= NOT(U66_10)
U72_10= NAND(STATE_REG_2__10, U68_10, U64_10, U65_10)
U73_10= NOT(U69_10)
U74_10= NOT(U70_10)
U75_10= NAND(STATE_REG_2__10, U71_10)
U76_10= NAND(STATE_REG_2__10, STATE_REG_1__10)
U77_10= OR(STATE_REG_1__10, STATE_REG_0__10)
U78_10= NAND(U65_10, U77_10)
U79_10= NAND(U74_10, U65_10)
U80_10= NAND(STATE_REG_2__10, U78_10)
U81_10= NAND(EQL_10, U67_10, STATE_REG_0__10)
U82_10= NAND(U73_10, STATE_REG_1__10)
U83_10= NAND(STATE_REG_1__10, U65_10, U73_10)
U84_10= OR(CONT_EQL_10, U63_10)
U85_10= NAND(U71_10, U68_10)
U86_10= NAND(STATE_REG_2__10, U78_10)
U87_10= NAND(EQL_10, U68_10)
U88_10= NAND(STATE_REG_0__10, STATE_REG_2__10)
U89_10= NAND(U73_10, U64_10)
U90_10= NAND(STATE_REG_0__10, STATE_REG_1__10)
U91_10= NAND(EQL_10, U64_10)
U92_10= NAND(STATE_REG_1__10, U87_10)


#Input encryption logic for ACKOUT_REG
ACKOUT_REG_1enc = XOR(ACKOUT_REG_1, keyinput0)

#Output encryption logic for U62
U62_10$enc_0 = XOR(U62_10, keyinput0)
U62_10$enc_1 = XOR(U62_10$enc_0, keyinput1)
U62_10$enc_2 = XOR(U62_10$enc_1, keyinput2)
U62_10$enc_3 = XOR(U62_10$enc_2, keyinput3)
U62_10$enc_4 = XOR(U62_10$enc_3, keyinput4)
U62_10$enc_5 = XOR(U62_10$enc_4, keyinput5)
U62_10$enc_6 = XOR(U62_10$enc_5, keyinput6)
U62_10$enc_7 = XOR(U62_10$enc_6, keyinput7)
U62_10$enc = XOR(U62_10$enc_7, keyinput8)


#Input encryption logic for STATE_REG_2_
STATE_REG_2__1enc_0 = XOR(STATE_REG_2__1, keyinput0)
STATE_REG_2__1enc = XOR(STATE_REG_2__1enc_0, keyinput1)

#Output encryption logic for U57
U57_10$enc_0 = XOR(U57_10, keyinput1)
U57_10$enc_1 = XOR(U57_10$enc_0, keyinput2)
U57_10$enc_2 = XOR(U57_10$enc_1, keyinput3)
U57_10$enc_3 = XOR(U57_10$enc_2, keyinput4)
U57_10$enc_4 = XOR(U57_10$enc_3, keyinput5)
U57_10$enc_5 = XOR(U57_10$enc_4, keyinput6)
U57_10$enc_6 = XOR(U57_10$enc_5, keyinput7)
U57_10$enc = XOR(U57_10$enc_6, keyinput8)


#Input encryption logic for STATE_REG_1_
STATE_REG_1__1enc_0 = XOR(STATE_REG_1__1, keyinput0)
STATE_REG_1__1enc_1 = XOR(STATE_REG_1__1enc_0, keyinput1)
STATE_REG_1__1enc = XOR(STATE_REG_1__1enc_1, keyinput2)

#Output encryption logic for U56
U56_10$enc_0 = XOR(U56_10, keyinput2)
U56_10$enc_1 = XOR(U56_10$enc_0, keyinput3)
U56_10$enc_2 = XOR(U56_10$enc_1, keyinput4)
U56_10$enc_3 = XOR(U56_10$enc_2, keyinput5)
U56_10$enc_4 = XOR(U56_10$enc_3, keyinput6)
U56_10$enc_5 = XOR(U56_10$enc_4, keyinput7)
U56_10$enc = XOR(U56_10$enc_5, keyinput8)


#Input encryption logic for STATE_REG_0_
STATE_REG_0__1enc_0 = XOR(STATE_REG_0__1, keyinput0)
STATE_REG_0__1enc_1 = XOR(STATE_REG_0__1enc_0, keyinput1)
STATE_REG_0__1enc_2 = XOR(STATE_REG_0__1enc_1, keyinput2)
STATE_REG_0__1enc = XOR(STATE_REG_0__1enc_2, keyinput3)

#Output encryption logic for U55
U55_10$enc_0 = XOR(U55_10, keyinput3)
U55_10$enc_1 = XOR(U55_10$enc_0, keyinput4)
U55_10$enc_2 = XOR(U55_10$enc_1, keyinput5)
U55_10$enc_3 = XOR(U55_10$enc_2, keyinput6)
U55_10$enc_4 = XOR(U55_10$enc_3, keyinput7)
U55_10$enc = XOR(U55_10$enc_4, keyinput8)


#Input encryption logic for CC_MUX_REG_2_
CC_MUX_REG_2__1enc_0 = XOR(CC_MUX_REG_2__1, keyinput0)
CC_MUX_REG_2__1enc_1 = XOR(CC_MUX_REG_2__1enc_0, keyinput1)
CC_MUX_REG_2__1enc_2 = XOR(CC_MUX_REG_2__1enc_1, keyinput2)
CC_MUX_REG_2__1enc_3 = XOR(CC_MUX_REG_2__1enc_2, keyinput3)
CC_MUX_REG_2__1enc = XOR(CC_MUX_REG_2__1enc_3, keyinput4)

#Output encryption logic for U59
U59_10$enc_0 = XOR(U59_10, keyinput4)
U59_10$enc_1 = XOR(U59_10$enc_0, keyinput5)
U59_10$enc_2 = XOR(U59_10$enc_1, keyinput6)
U59_10$enc_3 = XOR(U59_10$enc_2, keyinput7)
U59_10$enc = XOR(U59_10$enc_3, keyinput8)


#Input encryption logic for CC_MUX_REG_1_
CC_MUX_REG_1__1enc_0 = XOR(CC_MUX_REG_1__1, keyinput0)
CC_MUX_REG_1__1enc_1 = XOR(CC_MUX_REG_1__1enc_0, keyinput1)
CC_MUX_REG_1__1enc_2 = XOR(CC_MUX_REG_1__1enc_1, keyinput2)
CC_MUX_REG_1__1enc_3 = XOR(CC_MUX_REG_1__1enc_2, keyinput3)
CC_MUX_REG_1__1enc_4 = XOR(CC_MUX_REG_1__1enc_3, keyinput4)
CC_MUX_REG_1__1enc = XOR(CC_MUX_REG_1__1enc_4, keyinput5)

#Output encryption logic for U58
U58_10$enc_0 = XOR(U58_10, keyinput5)
U58_10$enc_1 = XOR(U58_10$enc_0, keyinput6)
U58_10$enc_2 = XOR(U58_10$enc_1, keyinput7)
U58_10$enc = XOR(U58_10$enc_2, keyinput8)


#Input encryption logic for USCITE_REG_2_
USCITE_REG_2__1enc_0 = XOR(USCITE_REG_2__1, keyinput0)
USCITE_REG_2__1enc_1 = XOR(USCITE_REG_2__1enc_0, keyinput1)
USCITE_REG_2__1enc_2 = XOR(USCITE_REG_2__1enc_1, keyinput2)
USCITE_REG_2__1enc_3 = XOR(USCITE_REG_2__1enc_2, keyinput3)
USCITE_REG_2__1enc_4 = XOR(USCITE_REG_2__1enc_3, keyinput4)
USCITE_REG_2__1enc_5 = XOR(USCITE_REG_2__1enc_4, keyinput5)
USCITE_REG_2__1enc = XOR(USCITE_REG_2__1enc_5, keyinput6)

#Output encryption logic for U61
U61_10$enc_0 = XOR(U61_10, keyinput6)
U61_10$enc_1 = XOR(U61_10$enc_0, keyinput7)
U61_10$enc = XOR(U61_10$enc_1, keyinput8)


#Input encryption logic for USCITE_REG_1_
USCITE_REG_1__1enc_0 = XOR(USCITE_REG_1__1, keyinput0)
USCITE_REG_1__1enc_1 = XOR(USCITE_REG_1__1enc_0, keyinput1)
USCITE_REG_1__1enc_2 = XOR(USCITE_REG_1__1enc_1, keyinput2)
USCITE_REG_1__1enc_3 = XOR(USCITE_REG_1__1enc_2, keyinput3)
USCITE_REG_1__1enc_4 = XOR(USCITE_REG_1__1enc_3, keyinput4)
USCITE_REG_1__1enc_5 = XOR(USCITE_REG_1__1enc_4, keyinput5)
USCITE_REG_1__1enc_6 = XOR(USCITE_REG_1__1enc_5, keyinput6)
USCITE_REG_1__1enc = XOR(USCITE_REG_1__1enc_6, keyinput7)

#Output encryption logic for U60
U60_10$enc_0 = XOR(U60_10, keyinput7)
U60_10$enc = XOR(U60_10$enc_0, keyinput8)


#Input encryption logic for ENABLE_COUNT_REG
ENABLE_COUNT_REG_1enc_0 = XOR(ENABLE_COUNT_REG_1, keyinput0)
ENABLE_COUNT_REG_1enc_1 = XOR(ENABLE_COUNT_REG_1enc_0, keyinput1)
ENABLE_COUNT_REG_1enc_2 = XOR(ENABLE_COUNT_REG_1enc_1, keyinput2)
ENABLE_COUNT_REG_1enc_3 = XOR(ENABLE_COUNT_REG_1enc_2, keyinput3)
ENABLE_COUNT_REG_1enc_4 = XOR(ENABLE_COUNT_REG_1enc_3, keyinput4)
ENABLE_COUNT_REG_1enc_5 = XOR(ENABLE_COUNT_REG_1enc_4, keyinput5)
ENABLE_COUNT_REG_1enc_6 = XOR(ENABLE_COUNT_REG_1enc_5, keyinput6)
ENABLE_COUNT_REG_1enc_7 = XOR(ENABLE_COUNT_REG_1enc_6, keyinput7)
ENABLE_COUNT_REG_1enc = XOR(ENABLE_COUNT_REG_1enc_7, keyinput8)

#Output encryption logic for U62
U62_10$enc = XOR(U62_10, keyinput8)

