
##################################Primary Inputs for Unroll-1
INPUT(R_BUTTON_1)
INPUT(G_BUTTON_1)
INPUT(KEY_1)
INPUT(START_1)
INPUT(TEST_1)
INPUT(RTS_1)
INPUT(RTR_1)
INPUT(V_IN_3__1)
INPUT(V_IN_2__1)
INPUT(V_IN_1__1)
INPUT(V_IN_0__1)


##################################Primary Outputs for Unroll-1
OUTPUT(CTS_REG_1)
OUTPUT(CTR_REG_1)
OUTPUT(V_OUT_REG_3__1)
OUTPUT(V_OUT_REG_2__1)
OUTPUT(V_OUT_REG_1__1)
OUTPUT(V_OUT_REG_0__1)

##################################Other Inputs
INPUT(VOTO0_REG_1)
INPUT(STATO_REG_3__1)
INPUT(STATO_REG_2__1)
INPUT(STATO_REG_1__1)
INPUT(STATO_REG_0__1)
INPUT(V_OUT_REG_3__1)
INPUT(V_OUT_REG_2__1)
INPUT(V_OUT_REG_1__1)
INPUT(V_OUT_REG_0__1)
INPUT(SIGN_REG_3__1)
INPUT(VOTO1_REG_1)
INPUT(CTR_REG_1)
INPUT(VOTO3_REG_1)
INPUT(LAST_R_REG_1)
INPUT(CTS_REG_1)
INPUT(VOTO2_REG_1)
INPUT(LAST_G_REG_1)

##################################Other Outputs
OUTPUT(U243_1$enc)
OUTPUT(U212_1$enc)
OUTPUT(U211_1$enc)
OUTPUT(U210_1$enc)
OUTPUT(U233_1$enc)
OUTPUT(U234_1$enc)
OUTPUT(U235_1$enc)
OUTPUT(U236_1$enc)
OUTPUT(U237_1$enc)
OUTPUT(U209_1$enc)
OUTPUT(U238_1$enc)
OUTPUT(U208_1$enc)
OUTPUT(U239_1$enc)
OUTPUT(U240_1$enc)
OUTPUT(U207_1$enc)
OUTPUT(U241_1$enc)
OUTPUT(U242_1$enc)

#################################Key Inputs
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)

####################################################################Unroll 1

VOTO0_REG_2 = BUF(U243_1)
STATO_REG_3__2 = BUF(U212_1)
STATO_REG_2__2 = BUF(U211_1)
STATO_REG_1__2 = BUF(U210_1)
STATO_REG_0__2 = BUF(U233_1)
V_OUT_REG_3__2 = BUF(U234_1)
V_OUT_REG_2__2 = BUF(U235_1)
V_OUT_REG_1__2 = BUF(U236_1)
V_OUT_REG_0__2 = BUF(U237_1)
SIGN_REG_3__2 = BUF(U209_1)
VOTO1_REG_2 = BUF(U238_1)
CTR_REG_2 = BUF(U208_1)
VOTO3_REG_2 = BUF(U239_1)
LAST_R_REG_2 = BUF(U240_1)
CTS_REG_2 = BUF(U207_1)
VOTO2_REG_2 = BUF(U241_1)
LAST_G_REG_2 = BUF(U242_1)





U200_1= NOR(STATO_REG_3__1, STATO_REG_2__1enc)
U201_1= AND(STATO_REG_2__1, U213_1)
U202_1= AND(START_1, U258_1)
U203_1= AND(U269_1, U268_1)
U204_1= AND(U203_1, U261_1)
U205_1= AND(U204_1, U291_1)
U206_1= AND(U231_1, U299_1)
U207_1= NAND(U315_1, U246_1, U316_1, U317_1)
U208_1= NAND(U260_1, U301_1)
U209_1= NAND(U290_1, U289_1)
U210_1= NAND(U332_1, U218_1, U341_1, U340_1)
U211_1= NAND(U283_1, U218_1, U284_1)
U212_1= NAND(U280_1, U279_1)
U213_1= NOT(STATO_REG_0__1)
U214_1= NAND(STATO_REG_0__1, U217_1)
U215_1= NOT(STATO_REG_2__1)
U216_1= NOT(RTR_1)
U217_1= NOT(STATO_REG_1__1)
U218_1= NAND(STATO_REG_1__1, U201_1)
U219_1= NOT(RTS_1)
U220_1= NAND(U200_1, U213_1)
U221_1= NOT(STATO_REG_3__1)
U222_1= NOT(START_1)
U223_1= NAND(START_1, U200_1)
U224_1= NAND(STATO_REG_1__1, STATO_REG_0__1enc)
U225_1= NAND(STATO_REG_1__1, U221_1)
U226_1= NOT(VOTO1_REG_1)
U227_1= NOT(VOTO2_REG_1)
U228_1= NAND(VOTO2_REG_1, VOTO1_REG_1, U247_1, U248_1)
U229_1= NAND(U246_1, U260_1, U272_1, U244_1, U203_1)
U230_1= NOT(SIGN_REG_3__1)
U231_1= NAND(STATO_REG_1__1, U215_1)
U232_1= NOT(KEY_1)
U233_1= NAND(U343_1, U342_1)
U234_1= NAND(U345_1, U344_1)
U235_1= NAND(U347_1, U346_1)
U236_1= NAND(U349_1, U348_1)
U237_1= NAND(U351_1, U350_1)
U238_1= NAND(U353_1, U352_1)
U239_1= NAND(U363_1, U362_1)
U240_1= NAND(U365_1, U364_1)
U241_1= NAND(U367_1, U366_1)
U242_1= NAND(U369_1, U368_1)
U243_1= NAND(U371_1, U370_1)
U244_1= AND(U336_1, U335_1, U273_1)
U245_1= NAND(U357_1, U356_1)
U246_1= NAND(RTR_1, U217_1, U201_1)
U247_1= NOT(VOTO3_REG_1)
U248_1= NOT(VOTO0_REG_1)
U249_1= NAND(U292_1, U263_1, U205_1)
U250_1= NAND(U205_1, U304_1)
U251_1= NOT(LAST_R_REG_1)
U252_1= NAND(KEY_1, STATO_REG_1__1, U202_1)
U253_1= NAND(U318_1, U263_1, U205_1)
U254_1= NOT(LAST_G_REG_1)
U255_1= NAND(U323_1, U223_1, U204_1)
U256_1= NOT(U228_1)
U257_1= NOT(TEST_1)
U258_1= NOT(U220_1)
U259_1= NOT(U218_1)
U260_1= NAND(STATO_REG_2__1, U219_1, U264_1)
U261_1= NAND(STATO_REG_3__1, U215_1, U264_1)
U262_1= NOT(U223_1)
U263_1= NAND(U202_1, U232_1)
U264_1= NOT(U214_1)
U265_1= NOT(U231_1)
U266_1= NOT(U224_1)
U267_1= NOT(U246_1)
U268_1= NAND(RTS_1, U259_1)
U269_1= NAND(U258_1, U217_1)
U270_1= OR(RTR_1, STATO_REG_1__1enc)
U271_1= NOT(U225_1)
U272_1= NAND(U334_1, U333_1, STATO_REG_3__1enc)
U273_1= NAND(U262_1, STATO_REG_0__1enc)
U274_1= NOT(U229_1)
U275_1= NAND(U256_1, U201_1)
U276_1= NAND(U258_1, U257_1)
U277_1= NAND(U276_1, U275_1)
U278_1= NAND(U213_1, U229_1)
U279_1= NAND(U277_1, U217_1, U229_1)
U280_1= NAND(STATO_REG_3__1, U278_1)
U281_1= NAND(U213_1, U228_1)
U282_1= NAND(U281_1, U214_1, U229_1)
U283_1= NAND(STATO_REG_1__1, U339_1)
U284_1= NAND(STATO_REG_2__1, U282_1)
U285_1= NAND(U256_1, U221_1)
U286_1= NAND(U213_1, U217_1, U285_1)
U287_1= NAND(U218_1, U220_1, U286_1)
U288_1= NAND(U257_1, U217_1, U258_1)
U289_1= NAND(SIGN_REG_3__1, U288_1)
U290_1= NAND(STATO_REG_3__1, STATO_REG_0__1enc)
U291_1= NAND(START_1, U215_1, U264_1)
U292_1= NAND(G_BUTTON_1, U254_1, U202_1)
U293_1= NOT(U249_1)
U294_1= NAND(U259_1, U221_1)
U295_1= NAND(U261_1, U294_1)
U296_1= NAND(KEY_1, U226_1, U265_1)
U297_1= NAND(V_IN_1__1, U295_1)
U298_1= NAND(U297_1, U296_1)
U299_1= NAND(STATO_REG_2__1, U217_1)
U300_1= NAND(U355_1, U354_1, U213_1, U206_1)
U301_1= NAND(CTR_REG_1, U300_1)
U302_1= NAND(START_1, U232_1)
U303_1= NAND(U224_1, U302_1)
U304_1= NAND(U200_1, U303_1)
U305_1= NOT(U250_1)
U306_1= NAND(U266_1, U361_1)
U307_1= NAND(V_IN_3__1, U295_1)
U308_1= NAND(U307_1, U306_1)
U309_1= NOT(U252_1)
U310_1= OR(STATO_REG_0__1, STATO_REG_3__1enc)
U311_1= NAND(RTR_1, U310_1)
U312_1= NAND(STATO_REG_3__1, U264_1)
U313_1= NAND(STATO_REG_1__1, U213_1)
U314_1= NAND(U206_1, U313_1, U312_1, U311_1)
U315_1= NAND(STATO_REG_3__1, U217_1, U201_1)
U316_1= NAND(RTR_1, U200_1, U264_1)
U317_1= NAND(CTS_REG_1, U314_1)
U318_1= NAND(R_BUTTON_1, U251_1, U202_1)
U319_1= NOT(U253_1)
U320_1= NAND(KEY_1, U227_1, U265_1)
U321_1= NAND(V_IN_2__1, U295_1)
U322_1= NAND(U321_1, U320_1)
U323_1= NAND(U265_1, U339_1)
U324_1= NOT(U255_1)
U325_1= NAND(KEY_1, U258_1)
U326_1= NAND(STATO_REG_3__1, U230_1)
U327_1= NAND(U326_1, U325_1)
U328_1= NAND(STATO_REG_1__1, U327_1)
U329_1= NAND(V_IN_0__1, U295_1)
U330_1= NAND(U329_1, U328_1)
U331_1= NAND(V_IN_3__1, V_IN_2__1, V_IN_0__1, V_IN_1__1)
U332_1= NAND(U274_1, STATO_REG_1__1enc)
U333_1= NAND(STATO_REG_0__1, U331_1)
U334_1= NAND(U270_1, U231_1, U213_1)
U335_1= NAND(U271_1, U222_1, U215_1)
U336_1= NAND(U266_1, U216_1, STATO_REG_2__1enc)
U337_1= NAND(STATO_REG_3__1, U213_1)
U338_1= NAND(STATO_REG_0__1, U221_1)
U339_1= NAND(U338_1, U337_1)
U340_1= NAND(STATO_REG_0__1, U229_1, U225_1)
U341_1= NAND(U271_1, U213_1)
U342_1= NAND(U274_1, STATO_REG_0__1enc)
U343_1= NAND(U287_1, U229_1)
U344_1= NAND(V_OUT_REG_3__1, U246_1)
U345_1= NAND(VOTO3_REG_1, U267_1)
U346_1= NAND(V_OUT_REG_2__1, U246_1)
U347_1= NAND(U267_1, VOTO2_REG_1enc)
U348_1= NAND(V_OUT_REG_1__1, U246_1)
U349_1= NAND(U267_1, VOTO1_REG_1enc)
U350_1= NAND(V_OUT_REG_0__1, U246_1)
U351_1= NAND(VOTO0_REG_1, U267_1)
U352_1= NAND(U293_1, VOTO1_REG_1enc)
U353_1= NAND(U298_1, U249_1)
U354_1= NAND(STATO_REG_3__1, U217_1)
U355_1= NAND(STATO_REG_1__1, U219_1)
U356_1= NAND(VOTO2_REG_1, U248_1)
U357_1= NAND(VOTO0_REG_1, U227_1)
U358_1= NOT(U245_1)
U359_1= NAND(U358_1, VOTO1_REG_1enc)
U360_1= NAND(U245_1, U226_1)
U361_1= NAND(U360_1, U359_1)
U362_1= NAND(U305_1, VOTO3_REG_1enc)
U363_1= NAND(U308_1, U250_1)
U364_1= NAND(LAST_R_REG_1, U252_1)
U365_1= NAND(U309_1, R_BUTTON_1)
U366_1= NAND(U319_1, VOTO2_REG_1enc)
U367_1= NAND(U322_1, U253_1)
U368_1= NAND(LAST_G_REG_1, U252_1)
U369_1= NAND(U309_1, G_BUTTON_1)
U370_1= NAND(U324_1, VOTO0_REG_1enc)
U371_1= NAND(U330_1, U255_1)


#Input encryption logic for VOTO0_REG
VOTO0_REG_1enc = XOR(VOTO0_REG_1, keyinput0)

#Output encryption logic for U243
U243_1$enc_0 = XOR(U243_1, keyinput0)
U243_1$enc_1 = XOR(U243_1$enc_0, keyinput1)
U243_1$enc_2 = XOR(U243_1$enc_1, keyinput2)
U243_1$enc_3 = XOR(U243_1$enc_2, keyinput3)
U243_1$enc_4 = XOR(U243_1$enc_3, keyinput4)
U243_1$enc_5 = XOR(U243_1$enc_4, keyinput5)
U243_1$enc_6 = XOR(U243_1$enc_5, keyinput6)
U243_1$enc_7 = XOR(U243_1$enc_6, keyinput7)
U243_1$enc_8 = XOR(U243_1$enc_7, keyinput8)
U243_1$enc_9 = XOR(U243_1$enc_8, keyinput9)
U243_1$enc_10 = XOR(U243_1$enc_9, keyinput10)
U243_1$enc_11 = XOR(U243_1$enc_10, keyinput11)
U243_1$enc_12 = XOR(U243_1$enc_11, keyinput12)
U243_1$enc_13 = XOR(U243_1$enc_12, keyinput13)
U243_1$enc_14 = XOR(U243_1$enc_13, keyinput14)
U243_1$enc_15 = XOR(U243_1$enc_14, keyinput15)
U243_1$enc = XOR(U243_1$enc_15, keyinput16)


#Input encryption logic for STATO_REG_3_
STATO_REG_3__1enc_0 = XOR(STATO_REG_3__1, keyinput0)
STATO_REG_3__1enc = XOR(STATO_REG_3__1enc_0, keyinput1)

#Output encryption logic for U212
U212_1$enc_0 = XOR(U212_1, keyinput1)
U212_1$enc_1 = XOR(U212_1$enc_0, keyinput2)
U212_1$enc_2 = XOR(U212_1$enc_1, keyinput3)
U212_1$enc_3 = XOR(U212_1$enc_2, keyinput4)
U212_1$enc_4 = XOR(U212_1$enc_3, keyinput5)
U212_1$enc_5 = XOR(U212_1$enc_4, keyinput6)
U212_1$enc_6 = XOR(U212_1$enc_5, keyinput7)
U212_1$enc_7 = XOR(U212_1$enc_6, keyinput8)
U212_1$enc_8 = XOR(U212_1$enc_7, keyinput9)
U212_1$enc_9 = XOR(U212_1$enc_8, keyinput10)
U212_1$enc_10 = XOR(U212_1$enc_9, keyinput11)
U212_1$enc_11 = XOR(U212_1$enc_10, keyinput12)
U212_1$enc_12 = XOR(U212_1$enc_11, keyinput13)
U212_1$enc_13 = XOR(U212_1$enc_12, keyinput14)
U212_1$enc_14 = XOR(U212_1$enc_13, keyinput15)
U212_1$enc = XOR(U212_1$enc_14, keyinput16)


#Input encryption logic for STATO_REG_2_
STATO_REG_2__1enc_0 = XOR(STATO_REG_2__1, keyinput0)
STATO_REG_2__1enc_1 = XOR(STATO_REG_2__1enc_0, keyinput1)
STATO_REG_2__1enc = XOR(STATO_REG_2__1enc_1, keyinput2)

#Output encryption logic for U211
U211_1$enc_0 = XOR(U211_1, keyinput2)
U211_1$enc_1 = XOR(U211_1$enc_0, keyinput3)
U211_1$enc_2 = XOR(U211_1$enc_1, keyinput4)
U211_1$enc_3 = XOR(U211_1$enc_2, keyinput5)
U211_1$enc_4 = XOR(U211_1$enc_3, keyinput6)
U211_1$enc_5 = XOR(U211_1$enc_4, keyinput7)
U211_1$enc_6 = XOR(U211_1$enc_5, keyinput8)
U211_1$enc_7 = XOR(U211_1$enc_6, keyinput9)
U211_1$enc_8 = XOR(U211_1$enc_7, keyinput10)
U211_1$enc_9 = XOR(U211_1$enc_8, keyinput11)
U211_1$enc_10 = XOR(U211_1$enc_9, keyinput12)
U211_1$enc_11 = XOR(U211_1$enc_10, keyinput13)
U211_1$enc_12 = XOR(U211_1$enc_11, keyinput14)
U211_1$enc_13 = XOR(U211_1$enc_12, keyinput15)
U211_1$enc = XOR(U211_1$enc_13, keyinput16)


#Input encryption logic for STATO_REG_1_
STATO_REG_1__1enc_0 = XOR(STATO_REG_1__1, keyinput0)
STATO_REG_1__1enc_1 = XOR(STATO_REG_1__1enc_0, keyinput1)
STATO_REG_1__1enc_2 = XOR(STATO_REG_1__1enc_1, keyinput2)
STATO_REG_1__1enc = XOR(STATO_REG_1__1enc_2, keyinput3)

#Output encryption logic for U210
U210_1$enc_0 = XOR(U210_1, keyinput3)
U210_1$enc_1 = XOR(U210_1$enc_0, keyinput4)
U210_1$enc_2 = XOR(U210_1$enc_1, keyinput5)
U210_1$enc_3 = XOR(U210_1$enc_2, keyinput6)
U210_1$enc_4 = XOR(U210_1$enc_3, keyinput7)
U210_1$enc_5 = XOR(U210_1$enc_4, keyinput8)
U210_1$enc_6 = XOR(U210_1$enc_5, keyinput9)
U210_1$enc_7 = XOR(U210_1$enc_6, keyinput10)
U210_1$enc_8 = XOR(U210_1$enc_7, keyinput11)
U210_1$enc_9 = XOR(U210_1$enc_8, keyinput12)
U210_1$enc_10 = XOR(U210_1$enc_9, keyinput13)
U210_1$enc_11 = XOR(U210_1$enc_10, keyinput14)
U210_1$enc_12 = XOR(U210_1$enc_11, keyinput15)
U210_1$enc = XOR(U210_1$enc_12, keyinput16)


#Input encryption logic for STATO_REG_0_
STATO_REG_0__1enc_0 = XOR(STATO_REG_0__1, keyinput0)
STATO_REG_0__1enc_1 = XOR(STATO_REG_0__1enc_0, keyinput1)
STATO_REG_0__1enc_2 = XOR(STATO_REG_0__1enc_1, keyinput2)
STATO_REG_0__1enc_3 = XOR(STATO_REG_0__1enc_2, keyinput3)
STATO_REG_0__1enc = XOR(STATO_REG_0__1enc_3, keyinput4)

#Output encryption logic for U233
U233_1$enc_0 = XOR(U233_1, keyinput4)
U233_1$enc_1 = XOR(U233_1$enc_0, keyinput5)
U233_1$enc_2 = XOR(U233_1$enc_1, keyinput6)
U233_1$enc_3 = XOR(U233_1$enc_2, keyinput7)
U233_1$enc_4 = XOR(U233_1$enc_3, keyinput8)
U233_1$enc_5 = XOR(U233_1$enc_4, keyinput9)
U233_1$enc_6 = XOR(U233_1$enc_5, keyinput10)
U233_1$enc_7 = XOR(U233_1$enc_6, keyinput11)
U233_1$enc_8 = XOR(U233_1$enc_7, keyinput12)
U233_1$enc_9 = XOR(U233_1$enc_8, keyinput13)
U233_1$enc_10 = XOR(U233_1$enc_9, keyinput14)
U233_1$enc_11 = XOR(U233_1$enc_10, keyinput15)
U233_1$enc = XOR(U233_1$enc_11, keyinput16)


#Input encryption logic for V_OUT_REG_3_
V_OUT_REG_3__1enc_0 = XOR(V_OUT_REG_3__1, keyinput0)
V_OUT_REG_3__1enc_1 = XOR(V_OUT_REG_3__1enc_0, keyinput1)
V_OUT_REG_3__1enc_2 = XOR(V_OUT_REG_3__1enc_1, keyinput2)
V_OUT_REG_3__1enc_3 = XOR(V_OUT_REG_3__1enc_2, keyinput3)
V_OUT_REG_3__1enc_4 = XOR(V_OUT_REG_3__1enc_3, keyinput4)
V_OUT_REG_3__1enc = XOR(V_OUT_REG_3__1enc_4, keyinput5)

#Output encryption logic for U234
U234_1$enc_0 = XOR(U234_1, keyinput5)
U234_1$enc_1 = XOR(U234_1$enc_0, keyinput6)
U234_1$enc_2 = XOR(U234_1$enc_1, keyinput7)
U234_1$enc_3 = XOR(U234_1$enc_2, keyinput8)
U234_1$enc_4 = XOR(U234_1$enc_3, keyinput9)
U234_1$enc_5 = XOR(U234_1$enc_4, keyinput10)
U234_1$enc_6 = XOR(U234_1$enc_5, keyinput11)
U234_1$enc_7 = XOR(U234_1$enc_6, keyinput12)
U234_1$enc_8 = XOR(U234_1$enc_7, keyinput13)
U234_1$enc_9 = XOR(U234_1$enc_8, keyinput14)
U234_1$enc_10 = XOR(U234_1$enc_9, keyinput15)
U234_1$enc = XOR(U234_1$enc_10, keyinput16)


#Input encryption logic for V_OUT_REG_2_
V_OUT_REG_2__1enc_0 = XOR(V_OUT_REG_2__1, keyinput0)
V_OUT_REG_2__1enc_1 = XOR(V_OUT_REG_2__1enc_0, keyinput1)
V_OUT_REG_2__1enc_2 = XOR(V_OUT_REG_2__1enc_1, keyinput2)
V_OUT_REG_2__1enc_3 = XOR(V_OUT_REG_2__1enc_2, keyinput3)
V_OUT_REG_2__1enc_4 = XOR(V_OUT_REG_2__1enc_3, keyinput4)
V_OUT_REG_2__1enc_5 = XOR(V_OUT_REG_2__1enc_4, keyinput5)
V_OUT_REG_2__1enc = XOR(V_OUT_REG_2__1enc_5, keyinput6)

#Output encryption logic for U235
U235_1$enc_0 = XOR(U235_1, keyinput6)
U235_1$enc_1 = XOR(U235_1$enc_0, keyinput7)
U235_1$enc_2 = XOR(U235_1$enc_1, keyinput8)
U235_1$enc_3 = XOR(U235_1$enc_2, keyinput9)
U235_1$enc_4 = XOR(U235_1$enc_3, keyinput10)
U235_1$enc_5 = XOR(U235_1$enc_4, keyinput11)
U235_1$enc_6 = XOR(U235_1$enc_5, keyinput12)
U235_1$enc_7 = XOR(U235_1$enc_6, keyinput13)
U235_1$enc_8 = XOR(U235_1$enc_7, keyinput14)
U235_1$enc_9 = XOR(U235_1$enc_8, keyinput15)
U235_1$enc = XOR(U235_1$enc_9, keyinput16)


#Input encryption logic for V_OUT_REG_1_
V_OUT_REG_1__1enc_0 = XOR(V_OUT_REG_1__1, keyinput0)
V_OUT_REG_1__1enc_1 = XOR(V_OUT_REG_1__1enc_0, keyinput1)
V_OUT_REG_1__1enc_2 = XOR(V_OUT_REG_1__1enc_1, keyinput2)
V_OUT_REG_1__1enc_3 = XOR(V_OUT_REG_1__1enc_2, keyinput3)
V_OUT_REG_1__1enc_4 = XOR(V_OUT_REG_1__1enc_3, keyinput4)
V_OUT_REG_1__1enc_5 = XOR(V_OUT_REG_1__1enc_4, keyinput5)
V_OUT_REG_1__1enc_6 = XOR(V_OUT_REG_1__1enc_5, keyinput6)
V_OUT_REG_1__1enc = XOR(V_OUT_REG_1__1enc_6, keyinput7)

#Output encryption logic for U236
U236_1$enc_0 = XOR(U236_1, keyinput7)
U236_1$enc_1 = XOR(U236_1$enc_0, keyinput8)
U236_1$enc_2 = XOR(U236_1$enc_1, keyinput9)
U236_1$enc_3 = XOR(U236_1$enc_2, keyinput10)
U236_1$enc_4 = XOR(U236_1$enc_3, keyinput11)
U236_1$enc_5 = XOR(U236_1$enc_4, keyinput12)
U236_1$enc_6 = XOR(U236_1$enc_5, keyinput13)
U236_1$enc_7 = XOR(U236_1$enc_6, keyinput14)
U236_1$enc_8 = XOR(U236_1$enc_7, keyinput15)
U236_1$enc = XOR(U236_1$enc_8, keyinput16)


#Input encryption logic for V_OUT_REG_0_
V_OUT_REG_0__1enc_0 = XOR(V_OUT_REG_0__1, keyinput0)
V_OUT_REG_0__1enc_1 = XOR(V_OUT_REG_0__1enc_0, keyinput1)
V_OUT_REG_0__1enc_2 = XOR(V_OUT_REG_0__1enc_1, keyinput2)
V_OUT_REG_0__1enc_3 = XOR(V_OUT_REG_0__1enc_2, keyinput3)
V_OUT_REG_0__1enc_4 = XOR(V_OUT_REG_0__1enc_3, keyinput4)
V_OUT_REG_0__1enc_5 = XOR(V_OUT_REG_0__1enc_4, keyinput5)
V_OUT_REG_0__1enc_6 = XOR(V_OUT_REG_0__1enc_5, keyinput6)
V_OUT_REG_0__1enc_7 = XOR(V_OUT_REG_0__1enc_6, keyinput7)
V_OUT_REG_0__1enc = XOR(V_OUT_REG_0__1enc_7, keyinput8)

#Output encryption logic for U237
U237_1$enc_0 = XOR(U237_1, keyinput8)
U237_1$enc_1 = XOR(U237_1$enc_0, keyinput9)
U237_1$enc_2 = XOR(U237_1$enc_1, keyinput10)
U237_1$enc_3 = XOR(U237_1$enc_2, keyinput11)
U237_1$enc_4 = XOR(U237_1$enc_3, keyinput12)
U237_1$enc_5 = XOR(U237_1$enc_4, keyinput13)
U237_1$enc_6 = XOR(U237_1$enc_5, keyinput14)
U237_1$enc_7 = XOR(U237_1$enc_6, keyinput15)
U237_1$enc = XOR(U237_1$enc_7, keyinput16)


#Input encryption logic for SIGN_REG_3_
SIGN_REG_3__1enc_0 = XOR(SIGN_REG_3__1, keyinput0)
SIGN_REG_3__1enc_1 = XOR(SIGN_REG_3__1enc_0, keyinput1)
SIGN_REG_3__1enc_2 = XOR(SIGN_REG_3__1enc_1, keyinput2)
SIGN_REG_3__1enc_3 = XOR(SIGN_REG_3__1enc_2, keyinput3)
SIGN_REG_3__1enc_4 = XOR(SIGN_REG_3__1enc_3, keyinput4)
SIGN_REG_3__1enc_5 = XOR(SIGN_REG_3__1enc_4, keyinput5)
SIGN_REG_3__1enc_6 = XOR(SIGN_REG_3__1enc_5, keyinput6)
SIGN_REG_3__1enc_7 = XOR(SIGN_REG_3__1enc_6, keyinput7)
SIGN_REG_3__1enc_8 = XOR(SIGN_REG_3__1enc_7, keyinput8)
SIGN_REG_3__1enc = XOR(SIGN_REG_3__1enc_8, keyinput9)

#Output encryption logic for U209
U209_1$enc_0 = XOR(U209_1, keyinput9)
U209_1$enc_1 = XOR(U209_1$enc_0, keyinput10)
U209_1$enc_2 = XOR(U209_1$enc_1, keyinput11)
U209_1$enc_3 = XOR(U209_1$enc_2, keyinput12)
U209_1$enc_4 = XOR(U209_1$enc_3, keyinput13)
U209_1$enc_5 = XOR(U209_1$enc_4, keyinput14)
U209_1$enc_6 = XOR(U209_1$enc_5, keyinput15)
U209_1$enc = XOR(U209_1$enc_6, keyinput16)


#Input encryption logic for VOTO1_REG
VOTO1_REG_1enc_0 = XOR(VOTO1_REG_1, keyinput0)
VOTO1_REG_1enc_1 = XOR(VOTO1_REG_1enc_0, keyinput1)
VOTO1_REG_1enc_2 = XOR(VOTO1_REG_1enc_1, keyinput2)
VOTO1_REG_1enc_3 = XOR(VOTO1_REG_1enc_2, keyinput3)
VOTO1_REG_1enc_4 = XOR(VOTO1_REG_1enc_3, keyinput4)
VOTO1_REG_1enc_5 = XOR(VOTO1_REG_1enc_4, keyinput5)
VOTO1_REG_1enc_6 = XOR(VOTO1_REG_1enc_5, keyinput6)
VOTO1_REG_1enc_7 = XOR(VOTO1_REG_1enc_6, keyinput7)
VOTO1_REG_1enc_8 = XOR(VOTO1_REG_1enc_7, keyinput8)
VOTO1_REG_1enc_9 = XOR(VOTO1_REG_1enc_8, keyinput9)
VOTO1_REG_1enc = XOR(VOTO1_REG_1enc_9, keyinput10)

#Output encryption logic for U238
U238_1$enc_0 = XOR(U238_1, keyinput10)
U238_1$enc_1 = XOR(U238_1$enc_0, keyinput11)
U238_1$enc_2 = XOR(U238_1$enc_1, keyinput12)
U238_1$enc_3 = XOR(U238_1$enc_2, keyinput13)
U238_1$enc_4 = XOR(U238_1$enc_3, keyinput14)
U238_1$enc_5 = XOR(U238_1$enc_4, keyinput15)
U238_1$enc = XOR(U238_1$enc_5, keyinput16)


#Input encryption logic for CTR_REG
CTR_REG_1enc_0 = XOR(CTR_REG_1, keyinput0)
CTR_REG_1enc_1 = XOR(CTR_REG_1enc_0, keyinput1)
CTR_REG_1enc_2 = XOR(CTR_REG_1enc_1, keyinput2)
CTR_REG_1enc_3 = XOR(CTR_REG_1enc_2, keyinput3)
CTR_REG_1enc_4 = XOR(CTR_REG_1enc_3, keyinput4)
CTR_REG_1enc_5 = XOR(CTR_REG_1enc_4, keyinput5)
CTR_REG_1enc_6 = XOR(CTR_REG_1enc_5, keyinput6)
CTR_REG_1enc_7 = XOR(CTR_REG_1enc_6, keyinput7)
CTR_REG_1enc_8 = XOR(CTR_REG_1enc_7, keyinput8)
CTR_REG_1enc_9 = XOR(CTR_REG_1enc_8, keyinput9)
CTR_REG_1enc_10 = XOR(CTR_REG_1enc_9, keyinput10)
CTR_REG_1enc = XOR(CTR_REG_1enc_10, keyinput11)

#Output encryption logic for U208
U208_1$enc_0 = XOR(U208_1, keyinput11)
U208_1$enc_1 = XOR(U208_1$enc_0, keyinput12)
U208_1$enc_2 = XOR(U208_1$enc_1, keyinput13)
U208_1$enc_3 = XOR(U208_1$enc_2, keyinput14)
U208_1$enc_4 = XOR(U208_1$enc_3, keyinput15)
U208_1$enc = XOR(U208_1$enc_4, keyinput16)


#Input encryption logic for VOTO3_REG
VOTO3_REG_1enc_0 = XOR(VOTO3_REG_1, keyinput0)
VOTO3_REG_1enc_1 = XOR(VOTO3_REG_1enc_0, keyinput1)
VOTO3_REG_1enc_2 = XOR(VOTO3_REG_1enc_1, keyinput2)
VOTO3_REG_1enc_3 = XOR(VOTO3_REG_1enc_2, keyinput3)
VOTO3_REG_1enc_4 = XOR(VOTO3_REG_1enc_3, keyinput4)
VOTO3_REG_1enc_5 = XOR(VOTO3_REG_1enc_4, keyinput5)
VOTO3_REG_1enc_6 = XOR(VOTO3_REG_1enc_5, keyinput6)
VOTO3_REG_1enc_7 = XOR(VOTO3_REG_1enc_6, keyinput7)
VOTO3_REG_1enc_8 = XOR(VOTO3_REG_1enc_7, keyinput8)
VOTO3_REG_1enc_9 = XOR(VOTO3_REG_1enc_8, keyinput9)
VOTO3_REG_1enc_10 = XOR(VOTO3_REG_1enc_9, keyinput10)
VOTO3_REG_1enc_11 = XOR(VOTO3_REG_1enc_10, keyinput11)
VOTO3_REG_1enc = XOR(VOTO3_REG_1enc_11, keyinput12)

#Output encryption logic for U239
U239_1$enc_0 = XOR(U239_1, keyinput12)
U239_1$enc_1 = XOR(U239_1$enc_0, keyinput13)
U239_1$enc_2 = XOR(U239_1$enc_1, keyinput14)
U239_1$enc_3 = XOR(U239_1$enc_2, keyinput15)
U239_1$enc = XOR(U239_1$enc_3, keyinput16)


#Input encryption logic for LAST_R_REG
LAST_R_REG_1enc_0 = XOR(LAST_R_REG_1, keyinput0)
LAST_R_REG_1enc_1 = XOR(LAST_R_REG_1enc_0, keyinput1)
LAST_R_REG_1enc_2 = XOR(LAST_R_REG_1enc_1, keyinput2)
LAST_R_REG_1enc_3 = XOR(LAST_R_REG_1enc_2, keyinput3)
LAST_R_REG_1enc_4 = XOR(LAST_R_REG_1enc_3, keyinput4)
LAST_R_REG_1enc_5 = XOR(LAST_R_REG_1enc_4, keyinput5)
LAST_R_REG_1enc_6 = XOR(LAST_R_REG_1enc_5, keyinput6)
LAST_R_REG_1enc_7 = XOR(LAST_R_REG_1enc_6, keyinput7)
LAST_R_REG_1enc_8 = XOR(LAST_R_REG_1enc_7, keyinput8)
LAST_R_REG_1enc_9 = XOR(LAST_R_REG_1enc_8, keyinput9)
LAST_R_REG_1enc_10 = XOR(LAST_R_REG_1enc_9, keyinput10)
LAST_R_REG_1enc_11 = XOR(LAST_R_REG_1enc_10, keyinput11)
LAST_R_REG_1enc_12 = XOR(LAST_R_REG_1enc_11, keyinput12)
LAST_R_REG_1enc = XOR(LAST_R_REG_1enc_12, keyinput13)

#Output encryption logic for U240
U240_1$enc_0 = XOR(U240_1, keyinput13)
U240_1$enc_1 = XOR(U240_1$enc_0, keyinput14)
U240_1$enc_2 = XOR(U240_1$enc_1, keyinput15)
U240_1$enc = XOR(U240_1$enc_2, keyinput16)


#Input encryption logic for CTS_REG
CTS_REG_1enc_0 = XOR(CTS_REG_1, keyinput0)
CTS_REG_1enc_1 = XOR(CTS_REG_1enc_0, keyinput1)
CTS_REG_1enc_2 = XOR(CTS_REG_1enc_1, keyinput2)
CTS_REG_1enc_3 = XOR(CTS_REG_1enc_2, keyinput3)
CTS_REG_1enc_4 = XOR(CTS_REG_1enc_3, keyinput4)
CTS_REG_1enc_5 = XOR(CTS_REG_1enc_4, keyinput5)
CTS_REG_1enc_6 = XOR(CTS_REG_1enc_5, keyinput6)
CTS_REG_1enc_7 = XOR(CTS_REG_1enc_6, keyinput7)
CTS_REG_1enc_8 = XOR(CTS_REG_1enc_7, keyinput8)
CTS_REG_1enc_9 = XOR(CTS_REG_1enc_8, keyinput9)
CTS_REG_1enc_10 = XOR(CTS_REG_1enc_9, keyinput10)
CTS_REG_1enc_11 = XOR(CTS_REG_1enc_10, keyinput11)
CTS_REG_1enc_12 = XOR(CTS_REG_1enc_11, keyinput12)
CTS_REG_1enc_13 = XOR(CTS_REG_1enc_12, keyinput13)
CTS_REG_1enc = XOR(CTS_REG_1enc_13, keyinput14)

#Output encryption logic for U207
U207_1$enc_0 = XOR(U207_1, keyinput14)
U207_1$enc_1 = XOR(U207_1$enc_0, keyinput15)
U207_1$enc = XOR(U207_1$enc_1, keyinput16)


#Input encryption logic for VOTO2_REG
VOTO2_REG_1enc_0 = XOR(VOTO2_REG_1, keyinput0)
VOTO2_REG_1enc_1 = XOR(VOTO2_REG_1enc_0, keyinput1)
VOTO2_REG_1enc_2 = XOR(VOTO2_REG_1enc_1, keyinput2)
VOTO2_REG_1enc_3 = XOR(VOTO2_REG_1enc_2, keyinput3)
VOTO2_REG_1enc_4 = XOR(VOTO2_REG_1enc_3, keyinput4)
VOTO2_REG_1enc_5 = XOR(VOTO2_REG_1enc_4, keyinput5)
VOTO2_REG_1enc_6 = XOR(VOTO2_REG_1enc_5, keyinput6)
VOTO2_REG_1enc_7 = XOR(VOTO2_REG_1enc_6, keyinput7)
VOTO2_REG_1enc_8 = XOR(VOTO2_REG_1enc_7, keyinput8)
VOTO2_REG_1enc_9 = XOR(VOTO2_REG_1enc_8, keyinput9)
VOTO2_REG_1enc_10 = XOR(VOTO2_REG_1enc_9, keyinput10)
VOTO2_REG_1enc_11 = XOR(VOTO2_REG_1enc_10, keyinput11)
VOTO2_REG_1enc_12 = XOR(VOTO2_REG_1enc_11, keyinput12)
VOTO2_REG_1enc_13 = XOR(VOTO2_REG_1enc_12, keyinput13)
VOTO2_REG_1enc_14 = XOR(VOTO2_REG_1enc_13, keyinput14)
VOTO2_REG_1enc = XOR(VOTO2_REG_1enc_14, keyinput15)

#Output encryption logic for U241
U241_1$enc_0 = XOR(U241_1, keyinput15)
U241_1$enc = XOR(U241_1$enc_0, keyinput16)


#Input encryption logic for LAST_G_REG
LAST_G_REG_1enc_0 = XOR(LAST_G_REG_1, keyinput0)
LAST_G_REG_1enc_1 = XOR(LAST_G_REG_1enc_0, keyinput1)
LAST_G_REG_1enc_2 = XOR(LAST_G_REG_1enc_1, keyinput2)
LAST_G_REG_1enc_3 = XOR(LAST_G_REG_1enc_2, keyinput3)
LAST_G_REG_1enc_4 = XOR(LAST_G_REG_1enc_3, keyinput4)
LAST_G_REG_1enc_5 = XOR(LAST_G_REG_1enc_4, keyinput5)
LAST_G_REG_1enc_6 = XOR(LAST_G_REG_1enc_5, keyinput6)
LAST_G_REG_1enc_7 = XOR(LAST_G_REG_1enc_6, keyinput7)
LAST_G_REG_1enc_8 = XOR(LAST_G_REG_1enc_7, keyinput8)
LAST_G_REG_1enc_9 = XOR(LAST_G_REG_1enc_8, keyinput9)
LAST_G_REG_1enc_10 = XOR(LAST_G_REG_1enc_9, keyinput10)
LAST_G_REG_1enc_11 = XOR(LAST_G_REG_1enc_10, keyinput11)
LAST_G_REG_1enc_12 = XOR(LAST_G_REG_1enc_11, keyinput12)
LAST_G_REG_1enc_13 = XOR(LAST_G_REG_1enc_12, keyinput13)
LAST_G_REG_1enc_14 = XOR(LAST_G_REG_1enc_13, keyinput14)
LAST_G_REG_1enc_15 = XOR(LAST_G_REG_1enc_14, keyinput15)
LAST_G_REG_1enc = XOR(LAST_G_REG_1enc_15, keyinput16)

#Output encryption logic for U242
U242_1$enc = XOR(U242_1, keyinput16)

